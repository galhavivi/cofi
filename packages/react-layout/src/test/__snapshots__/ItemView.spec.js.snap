// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemView Should render - ok 1`] = `
<styled.div>
  <styled.div>
    <styled.div>
      Employee
    </styled.div>
    <styled.div>
      <styled.div>
        <ForwardRef(Tabs)
          aria-label="Tabs"
          indicatorColor="primary"
          onChange={[MockFunction]}
          textColor="primary"
        >
          <ForwardRef(Tab)
            key="general"
            label="General"
            value="general"
          />
        </ForwardRef(Tabs)>
      </styled.div>
      <Options
        options={Array []}
      />
    </styled.div>
  </styled.div>
  <styled.div
    aria-label="Sections"
  >
    <ForwardRef
      id="general"
      key="general"
      size={4}
    />
  </styled.div>
  <styled.div
    aria-label="Footer"
  >
    <styled.div>
      <styled.div
        key="0"
      >
        <Button
          label="Cancel"
          onClick={[MockFunction]}
          type="secondary"
        />
      </styled.div>
      <styled.div
        key="1"
      >
        <Button
          label="Save"
          onClick={[MockFunction]}
          type="primary"
        />
      </styled.div>
    </styled.div>
  </styled.div>
</styled.div>
`;

exports[`ItemView Should render header options only - ok 1`] = `
<styled.div>
  <styled.div>
    <styled.div>
      <Options
        options={Array []}
      />
    </styled.div>
  </styled.div>
  <styled.div
    aria-label="Sections"
  >
    <ForwardRef
      id="general"
      key="general"
      size={4}
    />
  </styled.div>
  <styled.div
    aria-label="Footer"
  >
    <styled.div>
      <styled.div
        key="0"
      >
        <Button
          label="Cancel"
          onClick={[MockFunction]}
          type="secondary"
        />
      </styled.div>
      <styled.div
        key="1"
      >
        <Button
          label="Save"
          onClick={[MockFunction]}
          type="primary"
        />
      </styled.div>
    </styled.div>
  </styled.div>
</styled.div>
`;

exports[`ItemView Should render without footer - ok 1`] = `
<styled.div>
  <styled.div>
    <styled.div>
      Employee
    </styled.div>
    <styled.div>
      <styled.div>
        <ForwardRef(Tabs)
          aria-label="Tabs"
          indicatorColor="primary"
          onChange={[MockFunction]}
          textColor="primary"
        >
          <ForwardRef(Tab)
            key="general"
            label="General"
            value="general"
          />
        </ForwardRef(Tabs)>
      </styled.div>
      <Options
        options={Array []}
      />
    </styled.div>
  </styled.div>
  <styled.div
    aria-label="Sections"
  >
    <ForwardRef
      id="general"
      key="general"
      size={4}
    />
  </styled.div>
</styled.div>
`;

exports[`ItemView Should render without options - ok 1`] = `
<styled.div>
  <styled.div>
    <styled.div>
      Employee
    </styled.div>
    <styled.div>
      <styled.div>
        <ForwardRef(Tabs)
          aria-label="Tabs"
          indicatorColor="primary"
          onChange={[MockFunction]}
          textColor="primary"
        >
          <ForwardRef(Tab)
            key="general"
            label="General"
            value="general"
          />
        </ForwardRef(Tabs)>
      </styled.div>
    </styled.div>
  </styled.div>
  <styled.div
    aria-label="Sections"
  >
    <ForwardRef
      id="general"
      key="general"
      size={4}
    />
  </styled.div>
  <styled.div
    aria-label="Footer"
  >
    <styled.div>
      <styled.div
        key="0"
      >
        <Button
          label="Cancel"
          onClick={[MockFunction]}
          type="secondary"
        />
      </styled.div>
      <styled.div
        key="1"
      >
        <Button
          label="Save"
          onClick={[MockFunction]}
          type="primary"
        />
      </styled.div>
    </styled.div>
  </styled.div>
</styled.div>
`;

exports[`ItemView Should render without tabs - ok 1`] = `
<styled.div>
  <styled.div>
    <styled.div>
      Employee
    </styled.div>
    <styled.div>
      <Options
        options={Array []}
      />
    </styled.div>
  </styled.div>
  <styled.div
    aria-label="Sections"
  >
    <ForwardRef
      id="general"
      key="general"
      size={4}
    />
  </styled.div>
  <styled.div
    aria-label="Footer"
  >
    <styled.div>
      <styled.div
        key="0"
      >
        <Button
          label="Cancel"
          onClick={[MockFunction]}
          type="secondary"
        />
      </styled.div>
      <styled.div
        key="1"
      >
        <Button
          label="Save"
          onClick={[MockFunction]}
          type="primary"
        />
      </styled.div>
    </styled.div>
  </styled.div>
</styled.div>
`;

exports[`ItemView Should render without title - ok 1`] = `
<styled.div>
  <styled.div>
    <styled.div>
      <styled.div>
        <ForwardRef(Tabs)
          aria-label="Tabs"
          indicatorColor="primary"
          onChange={[MockFunction]}
          textColor="primary"
        >
          <ForwardRef(Tab)
            key="general"
            label="General"
            value="general"
          />
        </ForwardRef(Tabs)>
      </styled.div>
      <Options
        options={Array []}
      />
    </styled.div>
  </styled.div>
  <styled.div
    aria-label="Sections"
  >
    <ForwardRef
      id="general"
      key="general"
      size={4}
    />
  </styled.div>
  <styled.div
    aria-label="Footer"
  >
    <styled.div>
      <styled.div
        key="0"
      >
        <Button
          label="Cancel"
          onClick={[MockFunction]}
          type="secondary"
        />
      </styled.div>
      <styled.div
        key="1"
      >
        <Button
          label="Save"
          onClick={[MockFunction]}
          type="primary"
        />
      </styled.div>
    </styled.div>
  </styled.div>
</styled.div>
`;
